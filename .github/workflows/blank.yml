name: Vampirism

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  copy_repositories:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Git Config
      run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
        
    - name: Checkout destination repository
      uses: actions/checkout@v2
      with:
        repository: 'your_username/your_target_repository'
        token: ${{ secrets.VAMP }}
        path: 'home'
        ref: 'main'
        
    - name: Clone and copy repositories
      run: |
        if [ ! -f repositories.txt ]; then
          echo "repositories.txt not found!"
          exit 1
        fi
        while IFS= read -r line || [ -n "$line" ]; do
          repo_url=$(echo "$line" | cut -d' ' -f1)
          branch=$(echo "$line" | cut -d' ' -f2)
          repo_name=$(basename "$repo_url" .git)
          if [ -d "$repo_name" ]; then
            cd "$repo_name"
            git pull origin "$branch" || { echo "Failed to pull $repo_url"; exit 1; }
            cd ..
          else
            git clone --branch "$branch" "$repo_url" "$repo_name" || { echo "Failed to clone $repo_url"; exit 1; }
          fi
          rm -rf "$repo_name/.git"
          mkdir -p "./home/$repo_name"
          cp -r "$repo_name/." "./home/$repo_name/" || { echo "Failed to copy files from $repo_name"; exit 1; }
        done < repositories.txt
        
    - name: Check for changes
      id: check-changes
      run: |
        cd home
        git add .
        if git diff --cached --quiet; then
          echo "No changes detected"
          echo "changed=false" >> $GITHUB_ENV
        else
          echo "Changes detected"
          echo "changed=true" >> $GITHUB_ENV
        fi

    - name: Commit and push changes
      if: env.changed == 'true'
      run: |
        cd home
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        git add .
        git commit -m "Add repository and branch info"
        git push
